var cov_1v1090k8cw=function(){var path="/Users/reachwill/Desktop/course-codebase/coursecode/mocha/cash.js";var hash="1d58e647ccd5c4d42e2102c7a38a767b8ee3ab02";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"/Users/reachwill/Desktop/course-codebase/coursecode/mocha/cash.js",statementMap:{"0":{start:{line:17,column:8},end:{line:17,column:10}},"1":{start:{line:18,column:0},end:{line:18,column:64}},"2":{start:{line:19,column:0},end:{line:38,column:2}},"3":{start:{line:21,column:17},end:{line:21,column:19}},"4":{start:{line:22,column:17},end:{line:22,column:31}},"5":{start:{line:23,column:20},end:{line:23,column:43}},"6":{start:{line:25,column:4},end:{line:36,column:5}},"7":{start:{line:25,column:17},end:{line:25,column:18}},"8":{start:{line:26,column:19},end:{line:26,column:29}},"9":{start:{line:28,column:8},end:{line:35,column:9}},"10":{start:{line:29,column:24},end:{line:29,column:50}},"11":{start:{line:31,column:12},end:{line:34,column:13}},"12":{start:{line:31,column:24},end:{line:31,column:25}},"13":{start:{line:32,column:16},end:{line:32,column:34}},"14":{start:{line:33,column:16},end:{line:33,column:45}},"15":{start:{line:37,column:4},end:{line:37,column:18}},"16":{start:{line:40,column:0},end:{line:40,column:19}}},fnMap:{"0":{name:"(anonymous_0)",decl:{start:{line:19,column:14},end:{line:19,column:15}},loc:{start:{line:19,column:48},end:{line:38,column:1}},line:19}},branchMap:{"0":{loc:{start:{line:28,column:8},end:{line:35,column:9}},type:"if",locations:[{start:{line:28,column:8},end:{line:35,column:9}},{start:{line:28,column:8},end:{line:35,column:9}}],line:28}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0},f:{"0":0},b:{"0":[0,0]},_coverageSchema:"43e27e138ebf9cfc5966b082cf9a028302ed4184",hash:"1d58e647ccd5c4d42e2102c7a38a767b8ee3ab02"};var coverage=global[gcv]||(global[gcv]={});if(coverage[path]&&coverage[path].hash===hash){return coverage[path];}return coverage[path]=coverageData;}();//     STEP 3
// var C = {};                    // C Object simplifies exporting the module
// C.getChange = function () {    // enough to satisfy the test
//     'use strict';
//     return true;               // also passes JSLint
// };
//            // export the module with a single method
// //STEP 5
// C.getChange = function (totalPayable, cashPaid) {
//     'use strict';
//     return [50, 20, 20];    // just enough to pass :-)
// };
var C=(cov_1v1090k8cw.s[0]++,{});// C Object simplifies exporting the module
cov_1v1090k8cw.s[1]++;C.coins=[5000,2000,1000,500,200,100,50,20,10,5,2,1];cov_1v1090k8cw.s[2]++;C.getChange=function(totalPayable,cashPaid){'use strict';cov_1v1090k8cw.f[0]++;var change=(cov_1v1090k8cw.s[3]++,[]);var length=(cov_1v1090k8cw.s[4]++,C.coins.length);var remaining=(cov_1v1090k8cw.s[5]++,cashPaid-totalPayable);// we reduce this below
cov_1v1090k8cw.s[6]++;for(var i=(cov_1v1090k8cw.s[7]++,0);i<length;i++){// loop through array of notes & coins:
var coin=(cov_1v1090k8cw.s[8]++,C.coins[i]);cov_1v1090k8cw.s[9]++;if(remaining/coin>=1){cov_1v1090k8cw.b[0][0]++;// check coin fits into the remaining amount
var times=(cov_1v1090k8cw.s[10]++,Math.floor(remaining/coin));// no partial coins
cov_1v1090k8cw.s[11]++;for(var j=(cov_1v1090k8cw.s[12]++,0);j<times;j++){cov_1v1090k8cw.s[13]++;// add coin to change x times
change.push(coin);cov_1v1090k8cw.s[14]++;remaining=remaining-coin;// subtract coin from remaining
}}else{cov_1v1090k8cw.b[0][1]++;}}cov_1v1090k8cw.s[15]++;return change;};cov_1v1090k8cw.s[16]++;module.exports=C;